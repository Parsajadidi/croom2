version: '1.0.4'

networks:
  webapp:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: ${APP_NAME}_nginx
    ports:
    - "8000:80"
    links:
      - php
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/site.conf:/etc/nginx/conf.d/default.conf:rw
      - ./docker/logs/nginx:/var/logs/nginx:rw
    depends_on:
      - php
      - postgres
    networks:
      - webapp
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${APP_NAME}_php
    volumes:
      - ./:/var/www/html
    ports:
      - "9001:9000"
    networks:
      - webapp

  postgres:
    image: postgres:12.17-alpine3.19
    container_name: ${APP_NAME}_postgres
    restart: unless-stopped
    ports:
      - "5433:5432"
    volumes:
      - ./docker/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_HOST_AUTH_METHOD: "trust"
    networks:
      - webapp
  # redis_DB:
  #   image: redis:alpine
  #   container_name: ${APP_NAME}-redis-db
  #   command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
  #   volumes:
  #   - ./data/redis_DB:/data
  #   ports:
  #     - "8002:6379"
  # redis_Queue:
  #   image: redis:alpine
  #   container_name: ${APP_NAME}-redis-queue
  #   command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
  #   volumes:
  #   - ./data/redis_Queue:/data
  #   ports:
  #     - "8003:6379"
